/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package com.mycompany.student;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author 91877
 */
public class Supervisor_Report extends javax.swing.JDialog {

    /**
     * Creates new form Supervisor_Report
     */
    String usernamee;
    public Supervisor_Report(String username) {
        usernamee = username;
        initComponents();
        setLocationRelativeTo(null);
        admin_view.setVisible(false);
        try{
            Conn c = new Conn();
            String q = ("select * from users where username = '"+username+"'");
            ResultSet rs = c.s.executeQuery(q);
            if(rs.next()){
                String pos = rs.getString("position");
                admin_view.setVisible(!pos.equals("user"));
            }
        }catch (Exception exception){
            exception.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        generate_btn = new javax.swing.JButton();
        view_report = new javax.swing.JButton();
        back_btn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        admin_view = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Supervisor Duty Report ");
        setBackground(new java.awt.Color(255, 204, 204));

        jPanel1.setBackground(new java.awt.Color(255, 224, 223));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 20)); // NOI18N
        jLabel1.setText("      Supervisor Duty Chart Report Generation");
        jLabel1.setBorder(new javax.swing.border.MatteBorder(null));

        jCheckBox1.setBackground(new java.awt.Color(255, 224, 223));
        jCheckBox1.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jCheckBox1.setText("Have you inserted Students data?");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setBackground(new java.awt.Color(255, 224, 223));
        jCheckBox2.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jCheckBox2.setText("Have you inserted Timetables data?");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        jCheckBox3.setBackground(new java.awt.Color(255, 224, 223));
        jCheckBox3.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jCheckBox3.setText("Have you inserted Supervisors data?");
        jCheckBox3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox3ActionPerformed(evt);
            }
        });

        jCheckBox4.setBackground(new java.awt.Color(255, 224, 223));
        jCheckBox4.setFont(new java.awt.Font("Segoe UI", 1, 16)); // NOI18N
        jCheckBox4.setText("Have you inserted Classroom Details?");
        jCheckBox4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox4ActionPerformed(evt);
            }
        });

        generate_btn.setText("Generate Report");
        generate_btn.setEnabled(false);
        generate_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generate_btnActionPerformed(evt);
            }
        });

        view_report.setText("View / Print Report");
        view_report.setEnabled(false);
        view_report.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                view_reportActionPerformed(evt);
            }
        });

        back_btn.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        back_btn.setText("Back");
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\91877\\Documents\\NetBeansProjects\\Student\\src\\main\\java\\report_gen.png")); // NOI18N

        admin_view.setText("Admin View");
        admin_view.setEnabled(false);
        admin_view.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                admin_viewActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(15, 15, 15)
                                .addComponent(back_btn))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(235, 235, 235)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 466, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jCheckBox3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jCheckBox4, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(61, 61, 61)
                                .addComponent(generate_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(70, 70, 70)
                                .addComponent(view_report))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(178, 178, 178)
                                .addComponent(admin_view)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(back_btn)
                .addGap(5, 5, 5)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(33, 33, 33)
                        .addComponent(jCheckBox3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jCheckBox4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(generate_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(view_report, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(admin_view)
                        .addGap(30, 30, 30))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        dispose();
        Menu1 menu1 = new Menu1(usernamee);
        menu1.setVisible(true);

    }//GEN-LAST:event_back_btnActionPerformed

    private void view_reportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_view_reportActionPerformed
        // TODO add your handling code here:

//        try{
//            Class.forName("com.mysql.cj.jdbc.Driver");
//            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentdata?zeroDateTimeBehavior=CONVERT_TO_NULL", "user", "password");
//            String reportpath = "C:\\Users\\91877\\Documents\\jasper reports\\Supervisor_duty_chart_Exam_SH.jrxml";
//            JasperReport jr = JasperCompileManager.compileReport(reportpath);
//            JasperPrint jp = JasperFillManager.fillReport(jr, null,conn);
//            JasperViewer.viewReport(jp);
//            conn.close();
//
//        }
//        catch(Exception e){
//            JOptionPane.showMessageDialog(null,e);
//        }

try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/studentdata?zeroDateTimeBehavior=CONVERT_TO_NULL", "user", "password");
            String reportpath = "C:\\Users\\91877\\Documents\\jasper reports\\Supervisor_duty_chart_Exam_SH.jrxml";
            JasperReport jr = JasperCompileManager.compileReport(reportpath);
            JasperPrint jp = JasperFillManager.fillReport(jr, null, conn);
            JasperViewer viewer = new JasperViewer(jp, false);
            
            // Add a window listener to handle window close event
            viewer.addWindowListener(new WindowAdapter() {
                @Override
                public void windowClosing(WindowEvent e) {
                    // This code will be executed when the viewer frame is closed
                    // You can put your desired actions here
                    // For example, returning to your main frame
                    viewer.dispose();  // Close the JasperViewer frame
                    Supervisor_Report.this.setVisible(true);  // Show your main frame
                }
            });
            
            viewer.setVisible(true);
            conn.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    

    }//GEN-LAST:event_view_reportActionPerformed

    private void generate_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generate_btnActionPerformed
        //        ProgressBar demo = new ProgressBar();
        //        SahilTest1();
        //        SahilTest2 sahilTest2 = new SahilTest2();
        //        sahilTest2.main(new String[0]);
        //        sahilTest2.main(new String[0]);
        //        SupervisorShiftTableCreation t3 = new SupervisorShiftTableCreation();
        //        t3.main(new String[0]);
        //        SupervisorShiftsFiller t4 = new SupervisorShiftsFiller();
        //        t4.main(new String[0]);
        //        view_report.setEnabled(true);

        // Create and start a thread for ProgressBar
        Thread progressBarThread = new Thread(() -> {
            ProgressBar demo = new ProgressBar();
        });

        // Create and start a thread for SahilTest1
        Thread generateThread = new Thread(() -> {
            SahilTest1();
            SahilTest2 sahilTest2 = new SahilTest2();
            sahilTest2.main(new String[0]);
            //sahilTest2.main(new String[0]);
            SupervisorShiftTableCreation t3 = new SupervisorShiftTableCreation();
            t3.main(new String[0]);
            SupervisorShiftsFiller t4 = new SupervisorShiftsFiller();
            t4.main(new String[0]);

        });

        // Enable view_report when all threads have finished
        Thread completionThread = new Thread(() -> {
            try {
                progressBarThread.join();
                generateThread.join();

                SwingUtilities.invokeLater(() -> view_report.setEnabled(true));
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        });

        progressBarThread.start();
        generateThread.start();
        completionThread.start();
        
        admin_view.setEnabled(true);
    }//GEN-LAST:event_generate_btnActionPerformed

    private void jCheckBox4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox4ActionPerformed
        updateButtonState();
    }//GEN-LAST:event_jCheckBox4ActionPerformed

    private void jCheckBox3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox3ActionPerformed
        updateButtonState();
    }//GEN-LAST:event_jCheckBox3ActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        updateButtonState();
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        updateButtonState();
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void admin_viewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_admin_viewActionPerformed
        // TODO add your handling code here:
       new ViewAssignReport();
          
    }//GEN-LAST:event_admin_viewActionPerformed

    
    
    
       private void updateButtonState() {
    if (jCheckBox1.isSelected() && jCheckBox2.isSelected() && jCheckBox3.isSelected() && jCheckBox4.isSelected()  ) {
        generate_btn.setEnabled(true); // Enable the button when all checkboxes are checked
    } else {
       generate_btn.setEnabled(false); // Disable the button if any checkbox is unchecked
    }
}
    
    
    
 
    
    private void SahilTest1(){
        
         String jdbcUrl = "jdbc:mysql://localhost:3306/studentdata?zeroDateTimeBehavior=CONVERT_TO_NULL";
        String username = "user";
        String password = "password";

        try (Connection connection = DriverManager.getConnection(jdbcUrl, username, password)) {
            // Step 1: Fetch distinct exam dates from the timetable table where there is an exam, sorted in ascending order

            String TABLE_NAME = "datetimes";
            if (doesTableExist(connection, "supervisor_assignments")) {
                dropTable(connection, "supervisor_assignments");
            }
            if (doesTableExist(connection, TABLE_NAME)) {
                dropTable(connection, TABLE_NAME);
            }
            String qq = ("create table datetimes(exam_date date ,start_time varchar(50))");
            connection.createStatement().executeUpdate(qq);
            qq=("insert into datetimes select Date,Start_Time from time_table order by Date asc");
            connection.createStatement().executeUpdate(qq);
//            connection.createStatement().executeUpdate("drop table supervisor_assignments");
            String fetchExamDatesQuery = "select distinct * from datetimes";
            Statement fetchExamDatesStatement = connection.createStatement();

            ResultSet examDatesResultSet = fetchExamDatesStatement.executeQuery(fetchExamDatesQuery);

            // Step 2: Construct dynamic SQL query for creating the new table
            StringBuilder createTableQuery = new StringBuilder("CREATE TABLE supervisor_assignments (sup_id INT AUTO_INCREMENT PRIMARY KEY ,supervisor_name varchar(40), ");

            // Iterate over exam dates and add two columns for each date in the new table
            while (examDatesResultSet.next()) {
                String checkdate ;
                String time = examDatesResultSet.getString(2);
                String examDate = examDatesResultSet.getString("exam_date");
                String[] parts = time.split(":");

//                int hour = Integer.parseInt(parts[0]);
//                if(hour<12){
//                    createTableQuery.append("`").append(examDate).append("_M` varchar(50), ");
//                }
//                if(hour>12){
//                    createTableQuery.append("`").append(examDate).append("_E` varchar(50), ");
//                }


            if(time.equals("09:30 AM")){
                createTableQuery.append("`").append(examDate).append("_M` varchar(50), ");
            }
            else if(time.equals("02:30 PM")){
                createTableQuery.append("`").append(examDate).append("_E` varchar(50), ");
            
            }
            }

            // Remove the trailing comma and space from the query
            createTableQuery.setLength(createTableQuery.length() - 2);

            // Finish constructing the create table query
            createTableQuery.append(")");

            // Step 3: Execute the dynamic SQL query to create the new table
            Statement createTableStatement = connection.createStatement();
            createTableStatement.executeUpdate(createTableQuery.toString());
            connection.createStatement().executeUpdate("ALTER TABLE supervisor_assignments AUTO_INCREMENT = 1");
//            connection.createStatement().executeUpdate("drop table datetimes");
            connection.createStatement().executeUpdate("INSERT INTO supervisor_assignments (supervisor_name) SELECT supervisor_name FROM supervisor");


//            System.out.println("New table 'exam_results' created successfully with dynamic columns.");

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
    // Check if the table exists
    private static boolean doesTableExist(Connection connection, String tableName) throws SQLException {
        try (Statement statement = connection.createStatement()) {
            statement.execute("SHOW TABLES LIKE '" + tableName + "'");
            return statement.getResultSet().next();
        }
    }

    // Drop the table
    private static void dropTable(Connection connection, String tableName) throws SQLException {
        try (Statement statement = connection.createStatement()) {
            statement.execute("DROP TABLE " + tableName);
            System.out.println("Table dropped successfully.");
        }
    }
    
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Supervisor_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Supervisor_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Supervisor_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Supervisor_Report.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                 new Supervisor_Report("admin").setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton admin_view;
    private javax.swing.JButton back_btn;
    private javax.swing.JButton generate_btn;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton view_report;
    // End of variables declaration//GEN-END:variables
}
